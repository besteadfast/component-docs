import{_ as e,c as t,o,a1 as n}from"./chunks/framework.BQiZN-Cb.js";const b=JSON.parse('{"title":"Contributing","description":"","frontmatter":{},"headers":[],"relativePath":"contributing.md","filePath":"contributing.md"}'),i={name:"contributing.md"},a=n('<h1 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h1><h2 id="component-overview" tabindex="-1">Component Overview <a class="header-anchor" href="#component-overview" aria-label="Permalink to &quot;Component Overview&quot;">​</a></h2><p>A component is generally made up of 2 parts,</p><ul><li>a <strong>primitive</strong>, or base component, which encapsulates the functionality and should not have to be modified by a developer using the component</li><li>a <strong>pre-styled component</strong>, which will sit directly in Carbon&#39;s &#39;components&#39; folder and should be modified/duplicated as necessary by a developer using the component</li></ul><h2 id="naming" tabindex="-1">Naming <a class="header-anchor" href="#naming" aria-label="Permalink to &quot;Naming&quot;">​</a></h2><ul><li>primitives - folder containing primitives (base components)</li><li>Base[component] - naming convention for primitives (e.g. BaseAccordion)</li><li>[component] - naming convention for pre-styled components (e.g. Accordion)</li></ul><h2 id="api-development" tabindex="-1">API Development <a class="header-anchor" href="#api-development" aria-label="Permalink to &quot;API Development&quot;">​</a></h2><ul><li>Abstract away as much of HeadlessUI as possible, and only require direct import of items that sit inside modifiable sections <ul><li>For example: in a modal, we can abstract away the Dialog and DialogPanel, just providing API access to the css. However, the DialogTitle and DialogDescription components sit inside an abstract &quot;content area&quot; of the modal, so an implementation of that component should import those directly from HeadlessUI and use them as needed.</li></ul></li><li>Use slots for content areas, and props for consistent variables <ul><li>Where to draw this line is up to the Dev&#39;s discretion</li></ul></li></ul><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h2>',9),r=[a];function s(l,c,d,m,p,h){return o(),t("div",null,r)}const g=e(i,[["render",s]]);export{b as __pageData,g as default};
